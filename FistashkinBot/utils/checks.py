import disnake
import datetime
import random

from disnake.ext import commands
from utils import main, enums, constant, database, links


class Checks(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.main = main.MainSettings()
        self.color = enums.Color()
        self.otheremojis = constant.OtherEmojis()
        self.db = database.DataBase()

    PERMISSIONS = {
        "administrator": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
        "ban_members": "–ë–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤",
        "kick_members": "–í—ã–≥–æ–Ω—è—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤",
        "manage_guild": "–£–ø—Ä–∞–≤–ª—è—Ç—å —Å–µ—Ä–≤–µ—Ä–æ–º",
        "send_messages": "–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è",
        "manage_members": "–£–ø—Ä–∞–≤–ª—è—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏",
        "view_channel": "–ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∫–∞–Ω–∞–ª",
        "manage_roles": "–£–ø—Ä–∞–≤–ª—è—Ç—å —Ä–æ–ª—è–º–∏",
    }

    async def check_user_bot(self, inter, text):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
            description=f"‚ùå –¢—ã –Ω–µ –º–æ–∂–µ—à—å **{text}** {self.bot.user.mention}!",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_user_author(self, inter, text):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
            description=f"‚ùå –¢—ã –Ω–µ –º–æ–∂–µ—à—å **{text}** —Å–∞–º–æ–º—É —Å–µ–±–µ!",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_user_role(self, inter):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
            description=f"‚ùå –¢—ã –Ω–µ –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É –Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–π —Ä–æ–ª—å—é!",
            colour=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_bot_role(self, inter):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
            description=f"‚ùå –†–æ–ª—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—ã—Å–æ–∫–∞, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É!",
            colour=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_member_timeout(self, inter, member):
        if member.current_timeout:
            await inter.response.defer(ephemeral=True)
            embed = disnake.Embed(
                title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
                description=f"‚ùå –£—á–∞—Å—Ç–Ω–∏–∫ —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–∞–π–º-–∞—É—Ç–µ!",
                colour=self.color.RED,
            )
            await inter.edit_original_message(embed=embed)

        if member.current_timeout == None:
            await inter.response.defer(ephemeral=True)
            embed = disnake.Embed(
                title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
                description=f"‚ùå –£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–∞–π–º-–∞—É—Ç–µ!",
                colour=self.color.RED,
            )
            await inter.edit_original_message(embed=embed)

    async def check_timeout_time(self, inter):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
            description=f"‚ùå –¢—ã –Ω–µ –º–æ–∂–µ—à—å –∑–∞–º—É—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –±–æ–ª—å—à–µ —á–µ–º **28 –¥–Ω–µ–π**!",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_bot(self, inter, member):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
            description=f"‚ùå –¢—ã –Ω–µ –º–æ–∂–µ—à—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –±–æ—Ç–æ–º {member.mention}",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_amount_is_none(self, inter):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
            description=f"‚ùå –£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É **{self.economy.CURRENCY_NAME}**, –∫–æ—Ç–æ—Ä—É—é –∂–µ–ª–∞–µ—Ç–µ –Ω–∞—á–∏—Å–ª–∏—Ç—å –Ω–∞ —Å—á–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞!",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_unknown(self, inter, text):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
            description=f"‚ùå {text}",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_value_error(self, inter):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
            description="‚ùå –í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_interaction_rp(self, inter, text):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            description=f"üò• –¢—ã –Ω–µ –º–æ–∂–µ—à—å —Å–∞–º —Å–µ–±—è **{text}**!",
            color=self.color.RED,
        )
        embed.set_image(url=random.choice(self.rp.SAD_ERROR_IMAGES))
        await inter.edit_original_message(embed=embed)

    # Event handler error
    async def check_missing_permissions(self, inter, error):
        await inter.response.defer(ephemeral=True)
        permission_list = ", ".join(
            [self.PERMISSIONS.get(i, i) for i in error.missing_permissions]
        )
        embed = disnake.Embed(
            description=f"‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!\n–ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø—Ä–∞–≤–∞: {permission_list}",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_not_owner(self, inter):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            description="‚ùå –¢—ã –Ω–µ —è–≤–ª—è–µ—à—å—Å—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –∏–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –±–æ—Ç–∞, –ø–æ—ç—Ç–æ–º—É –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞!",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_cooldown(self, inter, text):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            description=text,
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_member_not_found(self, inter):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            description="‚ùå –£–∫–∞–∑–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    # NSFW Check
    async def check_is_nsfw(self, inter):
        await inter.response.defer(ephemeral=True)
        channels = list(
            map(
                lambda n: n.mention, filter(lambda x: x.nsfw, inter.guild.text_channels)
            )
        )
        channel_list = " ".join(channels)
        if len(channels) != 0:
            description = f"‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–∞—Ö —Å –ø–æ–º–µ—Ç–∫–æ–π NSFW!\n–ü–æ—ç—Ç–æ–º—É –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –æ–¥–Ω–∏–º –∏–∑ NSFW-–∫–∞–Ω–∞–ª–æ–≤: {channel_list}"
        else:
            description = f"‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–∞—Ö —Å –ø–æ–º–µ—Ç–∫–æ–π NSFW!"

        embed = disnake.Embed(
            description=description,
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    # WIP
    async def check_is_wip(self, inter):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            description=f"‚ùå –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –Ω–∞ –Ω–∞—à–∏—Ö –≤–µ—Ç–∫–∞—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö [–∑–¥–µ—Å—å]({self.main.GITHUB_REPOSITORY})!",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    # Unknown error
    async def check_unknown_exception(self, inter, text):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            description=text,
            color=self.color.RED,
        )
        view = links.Support_Link()
        await inter.edit_original_message(embed=embed, view=view)
