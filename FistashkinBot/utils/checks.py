import disnake
import datetime
import random

from disnake.ext import commands
from utils import main, enums, constant, database

class Checks(commands.Cog):
	def __init__(self, bot):
		self.bot = bot
		self.main = main.MainSettings()
		self.color = enums.Color()
		self.otheremojis = constant.OtherEmojis()
		self.rp = constant.RolePlay()
		self.db = database.DataBase()

	async def check_user_bot(self, inter, text):
		await inter.response.defer(ephemeral=True)
		embed = disnake.Embed(
			title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
			description=f"{inter.author.mention}, —Ç—ã –Ω–µ –º–æ–∂–µ—à—å **{text}** {self.bot.user.mention}!",
			color=self.color.RED,
		)
		await inter.edit_original_message(embed=embed)

	async def check_user_author(self, inter, text):
		await inter.response.defer(ephemeral=True)
		embed = disnake.Embed(
			title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
			description=f"{inter.author.mention}, —Ç—ã –Ω–µ –º–æ–∂–µ—à—å **{text}** —Å–∞–º–æ–º—É —Å–µ–±–µ!",
			color=self.color.RED,
		)
		await inter.edit_original_message(embed=embed)

	async def check_user_role(self, inter):
		await inter.response.defer(ephemeral=True)
		embed = disnake.Embed(
			title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
			description=f"{inter.author.mention}, —Ç—ã –Ω–µ –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É –Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–π —Ä–æ–ª—å—é!",
			colour=self.color.RED,
		)
		await inter.edit_original_message(embed=embed)

	async def check_bot_role(self, inter):
		await inter.response.defer(ephemeral=True)
		embed = disnake.Embed(
			title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
			description=f"{inter.author.mention}, —Ä–æ–ª—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—ã—Å–æ–∫–∞, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É!",
			colour=self.color.RED,
		)
		await inter.edit_original_message(embed=embed)

	async def check_member_timeout(self, inter, member):
		if member.current_timeout:
			await inter.response.defer(ephemeral=True)
			embed = disnake.Embed(
				title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
				description=f"{inter.author.mention}, —É—á–∞—Å—Ç–Ω–∏–∫ —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–∞–π–º-–∞—É—Ç–µ!",
				colour=self.color.RED,
			)
			await inter.edit_original_message(embed=embed)

		if member.current_timeout == None:
			await inter.response.defer(ephemeral=True)
			embed = disnake.Embed(
				title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
				description=f"{inter.author.mention}, —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–∞–π–º-–∞—É—Ç–µ!",
				colour=self.color.RED,
			)
			await inter.edit_original_message(embed=embed)

	async def check_timeout_time(self, inter):
		await inter.response.defer(ephemeral=True)
		embed = disnake.Embed(
			title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
			description=f"{inter.author.mention}, —Ç—ã –Ω–µ –º–æ–∂–µ—à—å –∑–∞–º—É—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –±–æ–ª—å—à–µ —á–µ–º **28 –¥–Ω–µ–π**!",
			color=self.color.RED,
		)
		await inter.edit_original_message(embed=embed)

	async def check_bot(self, inter, member):
		await inter.response.defer(ephemeral=True)
		embed = disnake.Embed(
			title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
			description=f"{inter.author.mention}, —Ç—ã –Ω–µ –º–æ–∂–µ—à—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –±–æ—Ç–æ–º {member.mention}",
			color=self.color.RED,
		)
		await inter.edit_original_message(embed=embed)

	async def check_time_muted(self, inter, member, time, reason, send_to_member: bool = False):
		await inter.response.defer(ephemeral=False)
		d = time[-1:]
		timemute = int(time[:-1])

		if d == "s" or d == "—Å":
			dynamic_durations = datetime.datetime.now() + datetime.timedelta(
				seconds=int(timemute)
			)

		if d == "m" or d == "–º":
			dynamic_durations = datetime.datetime.now() + datetime.timedelta(
				minutes=int(timemute)
			)

		if d == "h" or d == "—á":
			dynamic_durations = datetime.datetime.now() + datetime.timedelta(
				hours=int(timemute)
			)

		if d == "d" or d == "–¥":
			dynamic_durations = datetime.datetime.now() + datetime.timedelta(
				days=int(timemute)
			)

		dynamic_time = disnake.utils.format_dt(dynamic_durations, style="R")

		embed = disnake.Embed(
			description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {member.mention}\n"
			f"**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {inter.author.mention}\n"
			f"**–°–Ω—è—Ç–∏–µ –Ω–∞–∫–∞–∑–∞–Ω–∏—è:** {dynamic_time}\n"
			f"**–ü—Ä–∏—á–∏–Ω–∞:** `{reason}`\n",
			color=self.color.MAIN,
			timestamp=inter.created_at,
		)
		embed.set_author(name="ü§ê –ó–∞–≥–ª—É—à–∫–∞ —á–∞—Ç–∞", icon_url=member.display_avatar.url)
		embed.set_thumbnail(url=member.display_avatar.url)
		embed.set_footer(
			text="–ö–æ–º–∞–Ω–¥–∞ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Discord —Å–µ—Ä–≤–µ—Ä–∞",
			icon_url=inter.guild.icon.url if inter.guild.icon else None,
		)

		dm_embed = disnake.Embed(
			description=f"**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {inter.author.mention} `[ID: {inter.author.id}]`\n"
			f"**–°–Ω—è—Ç–∏–µ –Ω–∞–∫–∞–∑–∞–Ω–∏—è:** {dynamic_time}\n"
			f"**–ü—Ä–∏—á–∏–Ω–∞:** {reason}\n"
			f"**–°–µ—Ä–≤–µ—Ä:** {inter.guild.name}",
			color=self.color.MAIN,
			timestamp=inter.created_at,
		)
		dm_embed.set_author(
			name=f"{member.name}, –í–∞–º –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞ –∑–∞–≥–ª—É—à–∫–∞ —á–∞—Ç–∞",
			icon_url=member.display_avatar.url,
		)
		dm_embed.set_footer(
			text="–ö–æ–º–∞–Ω–¥–∞ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Discord —Å–µ—Ä–≤–µ—Ä–∞",
			icon_url=inter.guild.icon.url if inter.guild.icon else None,
		)

		await member.timeout(until=dynamic_durations, reason=reason)
		if send_to_member == True:
			await member.send(
				embed=dm_embed,
				components=[
					disnake.ui.Button(
						label=f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å {inter.guild.name}",
						emoji="üì®",
						style=disnake.ButtonStyle.gray,
						disabled=True,
					)
				],
			)
		else:
			pass
		await inter.edit_original_message(embed=embed)

	async def send_embed_punishment(self, inter, member, reason, punish, set_author_punish, send_to_member: bool = False):
		await inter.response.defer(ephemeral=False)
		warns_data = await self.db.get_warns(member)
		warns_count = warns_data["warns"]

		embed = disnake.Embed(
			description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {member.mention}\n"
			f"**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {inter.author.mention}\n"
			f"**–ü—Ä–∏—á–∏–Ω–∞:** `{reason}`\n",
			color=self.color.MAIN,
			timestamp=inter.created_at,
		)
		embed.set_author(name=punish, icon_url=member.display_avatar.url)
		embed.set_thumbnail(url=member.display_avatar.url)
		embed.set_footer(
			text="–ö–æ–º–∞–Ω–¥–∞ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Discord —Å–µ—Ä–≤–µ—Ä–∞",
			icon_url=inter.guild.icon.url if inter.guild.icon else None,
		)

		dm_embed = disnake.Embed(
			description=f"**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {inter.author.mention} `[ID: {inter.author.id}]`\n"
			f"**–ü—Ä–∏—á–∏–Ω–∞:** {reason}\n"
			f"**–°–µ—Ä–≤–µ—Ä:** {inter.guild.name}",
			color=self.color.MAIN,
			timestamp=inter.created_at,
		)
		dm_embed.set_author(
			name=f"{member.name}, {set_author_punish}",
			icon_url=member.display_avatar.url,
		)
		dm_embed.set_footer(
			text="–ö–æ–º–∞–Ω–¥–∞ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Discord —Å–µ—Ä–≤–µ—Ä–∞",
			icon_url=inter.guild.icon.url if inter.guild.icon else None,
		)

		if send_to_member == True:
			await member.send(
				embed=dm_embed,
				components=[
					disnake.ui.Button(
						label=f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å {inter.guild.name}",
						emoji="üì®",
						style=disnake.ButtonStyle.gray,
						disabled=True,
					)
				],
			)
		else:
			pass

		if (
			punish == "üïØ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞"
		):
			await inter.guild.ban(user=member, reason=reason)
		elif (
			punish == "üí® –ö–∏–∫"
		):
			await inter.guild.kick(user=member, reason=reason)
		elif (
			punish == "ü•≥ –° —É—á–∞—Å—Ç–Ω–∏–∫–∞ –±—ã–ª–∞ —Å–Ω—è—Ç–∞ –∑–∞–≥–ª—É—à–∫–∞ —á–∞—Ç–∞"
		):
			await member.timeout(until=None, reason=reason)
		elif (
			punish == "ü•≥ –†–∞–∑–±–∞–Ω"
		):
			await inter.guild.unban(user=user, reason=reason)
		elif (
			punish == f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ [{warns_count + 1}/5]"
		):
			await self.db.add_warn(member=member, reason=reason)

		await inter.edit_original_message(embed=embed)

	async def check_amount_is_none(self, inter):
		await inter.response.defer(ephemeral=True)
		embed = disnake.Embed(
			title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
			description=f"{inter.author.mention}, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É **{self.economy.CURRENCY_NAME}**, –∫–æ—Ç–æ—Ä—É—é –∂–µ–ª–∞–µ—Ç–µ –Ω–∞—á–∏—Å–ª–∏—Ç—å –Ω–∞ —Å—á–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞!",
			color=self.color.RED,
		)
		await inter.edit_original_message(embed=embed)

	async def check_unknown(self, inter, text):
		await inter.response.defer(ephemeral=True)
		embed = disnake.Embed(
			title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
			description=f"{inter.author.mention}, {text}",
			color=self.color.RED,
		)
		await inter.edit_original_message(embed=embed)

	async def check_interaction_rp(self, inter, text):
		await inter.response.defer(ephemeral=True)
		embed = disnake.Embed(
			description=f"üò• {inter.author.mention}, —Ç—ã –Ω–µ –º–æ–∂–µ—à—å —Å–∞–º —Å–µ–±—è **{text}**!"
		)
		embed.set_image(url=random.choice(self.rp.SAD_ERROR_IMAGES))
		await inter.edit_original_message(embed=embed)