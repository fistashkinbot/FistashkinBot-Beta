import disnake
import datetime
import random

from disnake.ext import commands
from utils import main, enums, constant, database, links


class Checks(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.main = main.MainSettings()
        self.color = enums.Color()
        self.otheremojis = constant.OtherEmojis()
        self.rp = constant.RolePlay()
        self.db = database.DataBase()

    async def check_user_bot(self, inter, text):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
            description=f"‚ùå –¢—ã –Ω–µ –º–æ–∂–µ—à—å **{text}** {self.bot.user.mention}!",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_user_author(self, inter, text):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
            description=f"‚ùå –¢—ã –Ω–µ –º–æ–∂–µ—à—å **{text}** —Å–∞–º–æ–º—É —Å–µ–±–µ!",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_user_role(self, inter):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
            description=f"‚ùå –¢—ã –Ω–µ –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É –Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–π —Ä–æ–ª—å—é!",
            colour=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_bot_role(self, inter):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
            description=f"‚ùå –†–æ–ª—å —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—ã—Å–æ–∫–∞, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É!",
            colour=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_member_timeout(self, inter, member):
        if member.current_timeout:
            await inter.response.defer(ephemeral=True)
            embed = disnake.Embed(
                title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
                description=f"‚ùå –£—á–∞—Å—Ç–Ω–∏–∫ —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–∞–π–º-–∞—É—Ç–µ!",
                colour=self.color.RED,
            )
            await inter.edit_original_message(embed=embed)

        if member.current_timeout == None:
            await inter.response.defer(ephemeral=True)
            embed = disnake.Embed(
                title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
                description=f"‚ùå –£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–∞–π–º-–∞—É—Ç–µ!",
                colour=self.color.RED,
            )
            await inter.edit_original_message(embed=embed)

    async def check_timeout_time(self, inter):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
            description=f"‚ùå –¢—ã –Ω–µ –º–æ–∂–µ—à—å –∑–∞–º—É—Ç–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –±–æ–ª—å—à–µ —á–µ–º **28 –¥–Ω–µ–π**!",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_bot(self, inter, member):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
            description=f"‚ùå –¢—ã –Ω–µ –º–æ–∂–µ—à—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –±–æ—Ç–æ–º {member.mention}",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_time_muted(
        self, inter, member, time, reason, send_to_member: bool = False
    ):
        await inter.response.defer(ephemeral=False)
        d = time[-1:]
        timemute = int(time[:-1])

        if d == "s" or d == "—Å":
            dynamic_durations = datetime.datetime.now() + datetime.timedelta(
                seconds=int(timemute)
            )

        if d == "m" or d == "–º":
            dynamic_durations = datetime.datetime.now() + datetime.timedelta(
                minutes=int(timemute)
            )

        if d == "h" or d == "—á":
            dynamic_durations = datetime.datetime.now() + datetime.timedelta(
                hours=int(timemute)
            )

        if d == "d" or d == "–¥":
            dynamic_durations = datetime.datetime.now() + datetime.timedelta(
                days=int(timemute)
            )

        dynamic_time = disnake.utils.format_dt(dynamic_durations, style="R")

        embed = disnake.Embed(
            description=f"‚úÖ –£—á–∞—Å—Ç–Ω–∏–∫ {member.mention} –∑–∞–º—å—é—á–µ–Ω! üôä",
            color=self.color.MAIN,
            timestamp=inter.created_at,
        )
        embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=inter.author.mention, inline=True)
        embed.add_field(name="–ù–∞–∫–∞–∑–∞–Ω–∏–µ –±—É–¥–µ—Ç —Å–Ω—è—Ç–æ", value=dynamic_time, inline=True)
        embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=False)

        embed.set_thumbnail(url=member.display_avatar.url)
        embed.set_footer(
            text="–ö–æ–º–∞–Ω–¥–∞ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Discord —Å–µ—Ä–≤–µ—Ä–∞",
            icon_url=inter.guild.icon.url if inter.guild.icon else None,
        )

        dm_embed = disnake.Embed(
            description=f"–í–∞–º –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞ –∑–∞–≥–ª—É—à–∫–∞ —á–∞—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ `{inter.guild.name}`!",
            color=self.color.MAIN,
            timestamp=inter.created_at,
        )

        dm_embed.add_field(
            name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä",
            value=f"{inter.author.mention}\n`[ID: {inter.author.id}]`",
            inline=True,
        )
        dm_embed.add_field(
            name="–ù–∞–∫–∞–∑–∞–Ω–∏–µ –±—É–¥–µ—Ç —Å–Ω—è—Ç–æ", value=dynamic_time, inline=True
        )
        dm_embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=False)

        dm_embed.set_thumbnail(url=member.display_avatar.url)
        dm_embed.set_footer(
            text="–ö–æ–º–∞–Ω–¥–∞ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Discord —Å–µ—Ä–≤–µ—Ä–∞",
            icon_url=inter.guild.icon.url if inter.guild.icon else None,
        )

        await member.timeout(until=dynamic_durations, reason=reason)
        if send_to_member == True:
            await member.send(
                embed=dm_embed,
                components=[
                    disnake.ui.Button(
                        label=f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å {inter.guild.name}",
                        emoji="üì®",
                        style=disnake.ButtonStyle.gray,
                        disabled=True,
                    )
                ],
            )
        else:
            pass
        await inter.edit_original_message(embed=embed)

    async def send_embed_punishment(
        self,
        inter,
        member: disnake.Member,
        reason,
        punish,
        dm_punish,
        send_to_member: bool = False,
    ):
        await inter.response.defer(ephemeral=False)

        embed = disnake.Embed(
            description=punish,
            color=self.color.MAIN,
            timestamp=inter.created_at,
        )

        embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=inter.author.mention)
        embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason)

        embed.set_thumbnail(url=member.display_avatar.url)
        embed.set_footer(
            text="–ö–æ–º–∞–Ω–¥–∞ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Discord —Å–µ—Ä–≤–µ—Ä–∞",
            icon_url=inter.guild.icon.url if inter.guild.icon else None,
        )

        dm_embed = disnake.Embed(
            description=dm_punish,
            color=self.color.MAIN,
            timestamp=inter.created_at,
        )

        dm_embed.add_field(
            name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=f"{inter.author.mention}\n`[ID: {inter.author.id}]`"
        )
        dm_embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason)

        dm_embed.set_footer(
            text="–ö–æ–º–∞–Ω–¥–∞ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Discord —Å–µ—Ä–≤–µ—Ä–∞",
            icon_url=inter.guild.icon.url if inter.guild.icon else None,
        )

        if send_to_member == True:
            await member.send(
                embed=dm_embed,
                components=[
                    disnake.ui.Button(
                        label=f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å {inter.guild.name}",
                        emoji="üì®",
                        style=disnake.ButtonStyle.gray,
                        disabled=True,
                    )
                ],
            )
        else:
            pass

        if punish == f"‚úÖ –£—á–∞—Å—Ç–Ω–∏–∫ {member.mention} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω.":
            await inter.guild.ban(user=member, reason=reason)
        elif punish == f"‚úÖ –£—á–∞—Å—Ç–Ω–∏–∫ {member.mention} –±—ã–ª –∏–∑–≥–Ω–∞–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞.":
            await inter.guild.kick(user=member, reason=reason)
        elif punish == f"‚úÖ –° —É—á–∞—Å—Ç–Ω–∏–∫–∞ {member.mention} —Å–Ω—è—Ç—ã –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è! üêµ":
            await member.timeout(until=None, reason=reason)
        elif punish == f"‚úÖ –£—á–∞—Å—Ç–Ω–∏–∫ {member.mention} –ø–æ–ª—É—á–∏–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ!":
            await self.db.add_warn(member, inter.author.id, reason)

        await inter.edit_original_message(embed=embed)

    async def check_amount_is_none(self, inter):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
            description=f"‚ùå –£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É **{self.economy.CURRENCY_NAME}**, –∫–æ—Ç–æ—Ä—É—é –∂–µ–ª–∞–µ—Ç–µ –Ω–∞—á–∏—Å–ª–∏—Ç—å –Ω–∞ —Å—á–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞!",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_unknown(self, inter, text):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
            description=f"‚ùå {text}",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_value_error(self, inter):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            title=f"{self.otheremojis.WARNING} –û—à–∏–±–∫–∞!",
            description="‚ùå –í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_interaction_rp(self, inter, text):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            description=f"üò• –¢—ã –Ω–µ –º–æ–∂–µ—à—å —Å–∞–º —Å–µ–±—è **{text}**!",
            color=self.color.RED,
        )
        embed.set_image(url=random.choice(self.rp.SAD_ERROR_IMAGES))
        await inter.edit_original_message(embed=embed)

    # event errors
    async def check_missing_permissions(self, inter):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            description="‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_not_owner(self, inter):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            description="‚ùå –¢—ã –Ω–µ —è–≤–ª—è–µ—à—å—Å—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –∏–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –±–æ—Ç–∞, –ø–æ—ç—Ç–æ–º—É –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞!",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_bot_missing_permissions(self, inter):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            description="‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ —É –±–æ—Ç–∞!",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_cooldown(self, inter, text):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            description=text,
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_member_not_found(self, inter):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            description="‚ùå –£–∫–∞–∑–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.",
            color=self.color.RED,
        )
        await inter.edit_original_message(embed=embed)

    async def check_unknown_exception(self, inter, text):
        await inter.response.defer(ephemeral=True)
        embed = disnake.Embed(
            description=text,
            color=self.color.RED,
        )
        view = links.Support_Link()
        await inter.edit_original_message(embed=embed, view=view)
