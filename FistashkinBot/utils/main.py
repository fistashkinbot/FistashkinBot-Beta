import disnake
import random

from environs import Env
from .enums import Color
from disnake.ext import commands
from utils import database, main, constant, checks

class MainSettings:
	FOOTER_TEXT = "Riverya4life ¬© 2023 All rights reserved üêí"
	FOOTER_AVATAR = "https://github.com/riverya4life.png"
	DEVELOPER_ID = 668453200457760786
	BOT_ID = 991338113630752928
	BOT_VERSION = "v1.4a (<t:1687898840:d>)"
	BOT_EMOJI = "<:fistashkinbot:1145318360196845649>"

	GITHUB_AUTHOR = "https://github.com/riverya4life"
	DISCORD_BOT_SERVER = "https://discord.gg/H9XCZSReMj"
	BOT_SITE = "https://fistashkinbot.github.io/"
	BOT_INVITE = "https://discord.com/api/oauth2/authorize?client_id=991338113630752928&permissions=8&scope=bot%20applications.commands"
	GITHUB_REPOSITORY = "https://github.com/fistashkinbot/FistashkinBot-Beta"
	PATREON = "https://www.patreon.com/FistashkinBot"
	TELEGRAM = "https://t.me/riverya4lifeoff"

class MusicSettings:
	env = Env()
	env.read_env()

	HOST = "127.0.0.1"
	PORT = 7777
	PASSWORD = "N1KE02061992"
	SPOTIFY_CLIENT_ID = env.str("SPOTIFY_CLIENT_ID")
	SPOTIFY_CLIENT_SECRET = env.str("SPOTIFY_CLIENT_SECRET")

class EconomySystem(commands.Cog):
	def __init__(self, bot):
		self.bot = bot
		self.rp = constant.RolePlay()
		self.db = database.DataBase()
		self.otheremojis = constant.OtherEmojis()
		self.checks = checks.Checks(self.bot)

	MULTIPLIER = 2.0
	CURRENCY_NAME = "FC <a:fbDP:1070681790429270046>"
	CURRENCY_EMOJI = "<a:fbDP:1070681790429270046>"

	async def casino_frame(self, inter, view):
		await inter.response.defer(ephemeral=False)
		casino_embed = disnake.Embed(
			description = "*–í—ã–±–µ—Ä–∏ –∏–≥—Ä—É –≤ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—å*\n**–ù–∞ –≤—ã–±–æ—Ä —É —Ç–µ–±—è –µ—Å—Ç—å:**\n"
			f"* –ú–æ–Ω–µ—Ç–∫–∞\n* –ö–µ–π—Å—ã\n* –ë–æ–π—Ü–æ–≤—Å–∫–∏–π –∫–ª—É–±", 
			color = Color.MAIN,
		)
		casino_embed.set_thumbnail(url = "https://cdn-icons-png.flaticon.com/512/1055/1055814.png")
		casino_embed.set_author(
            name="–ö–∞–∑–∏–Ω–æ", 
            icon_url=inter.author.display_avatar.url
        )
		message = await inter.edit_original_message(embed=casino_embed, view=view)
		view.message = message

	async def coin_frame(self, inter, view):
		await inter.response.defer(ephemeral=False)
		coin_embed = disnake.Embed(
	    	description=f"–ú–Ω–æ–∂–∏—Ç–µ–ª—å: **{self.MULTIPLIER}** \n –¢–≤–æ—è –∑–∞–¥–∞—á–∞ –≤—ã–±—Ä–∞—Ç—å –æ–¥–Ω—É –∏–∑ —Å—Ç–æ—Ä–æ–Ω –º–æ–Ω–µ—Ç–∫–∏, –µ—Å–ª–∏ —É–≥–∞–¥—ã–≤–∞–µ—à—å - —É–º–Ω–æ–∂–∞–µ—à—å —Å–≤–æ—é —Å—Ç–∞–≤–∫—É –Ω–∞ –º–Ω–æ–∂–∏—Ç–µ–ª—å", 
	    	color=Color.MAIN,
	    )
		coin_embed.add_field(value=str(15), name="–°—Ç–∞–≤–∫–∞")
		coin_embed.set_thumbnail(url="https://cdn-icons-png.flaticon.com/512/272/272525.png")
		coin_embed.set_author(
            name="–ú–æ–Ω–µ—Ç–∫–∞", 
            icon_url=inter.author.display_avatar.url
        )
		message = await inter.edit_original_message(embed=coin_embed, view=view)
		view.message = message

	async def case_frame(self, inter, view):
		await inter.response.defer(ephemeral=False)
		case_embed = disnake.Embed(
	    	description=f"–î–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞ –Ω–∞–∂–º–∏ –Ω–∞ \"–û—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å\" \n **–í –∫–µ–π—Å–∞—Ö –±–æ–ª—å—à–∏–µ —à–∞–Ω—Å—ã –Ω–∞ –≤—ã–∏–≥—Ä—ã—à!**", 
	    	color=Color.MAIN,
	    )
		case_embed.set_thumbnail(url="https://cdn-icons-png.flaticon.com/512/10348/10348893.png")
		case_embed.set_author(
            name="–ö–µ–π—Å—ã", 
            icon_url=inter.author.display_avatar.url
        )
		message = await inter.edit_original_message(embed=case_embed, view=view)
		view.message = message

	async def fight_club_frame(self, inter, view):
		await inter.response.defer(ephemeral=False)
		fight_embed = disnake.Embed(
	    	description=f"*–ü–µ—Ä–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ –±–æ–π—Ü–æ–≤—Å–∫–æ–≥–æ –∫–ª—É–±–∞ - –Ω–∏–∫–æ–º—É –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–π –ø—Ä–æ –±–æ–π—Ü–æ–≤—Å–∫–∏–π –∫–ª—É–±...* \n "
	    	f"**–°—Ç–æ–∏–º–æ—Å—Ç—å –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –ø–æ–µ–¥–∏–Ω–æ–∫ - 10 {self.CURRENCY_NAME}. ** \n "
	    	f"–¢–µ–±–µ –¥–∞—é—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–¥–µ–ª–∞—Ç—å —É–¥–∞—Ä –ø–µ—Ä–≤—ã–º, –µ—Å–ª–∏ —Ç—ã —Ö–æ—Ä–æ—à–æ —Ä–µ–∞–ª–∏–∑—É–µ—à—å –µ–≥–æ, —Ç–æ –ø–æ–ª—É—á–∏—à—å 15 {self.CURRENCY_NAME}, –µ—Å–ª–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ –∑–∞—â–∏—Ç–∏—Ç—Å—è, —Å–æ–±–æ–ª–µ–∑–Ω—É—é —Ç–µ–±–µ...", 
	    	color=Color.MAIN,
		)
		fight_embed.set_thumbnail(url="https://cdn-icons-png.flaticon.com/512/6264/6264793.png")
		fight_embed.set_author(
            name="–ë–æ–π—Ü–æ–≤—Å–∫–∏–π –∫–ª—É–±", 
            icon_url=inter.author.display_avatar.url
        )
		message = await inter.edit_original_message(embed=fight_embed, view=view)
		view.message = message

	async def hit(self, inter, body_part, view):
		await inter.response.defer(ephemeral=False)
		data = await self.db.get_data(inter.author)
		if (
			10 > data["balance"]
		):
			return await self.checks.check_unknown(
            	inter, 
            	text=f" —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ **{self.CURRENCY_NAME}** –¥–ª—è –∏–≥—Ä—ã!",
            )
		else:
			await self.db.update_member(
				"UPDATE users SET balance = balance - ? WHERE member_id = ? AND guild_id = ?", 
				[
					10, 
					inter.author.id, 
					inter.guild.id
				],
			)
			if not random.choice(
				range(0, 4)
			):
				await self.db.update_member(
					"UPDATE users SET balance = balance + ? WHERE member_id = ? AND guild_id = ?", 
					[
						15, 
						inter.author.id, 
						inter.guild.id
					],
				)
				embed = disnake.Embed(
					description=f"**–¢—ã —Å–¥–µ–ª–∞–ª {body_part} –∏ –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–≤–æ–µ–≥–æ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞ –≤ –Ω–æ–∫–∞—É—Ç! –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å, —Ç–≤–æ–π —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å 15 {self.CURRENCY_NAME} –Ω–∞ —Å–≤–æ–π –±–∞–ª–∞–Ω—Å!**",
					color=Color.GREEN,
				)
				embed.set_image(url=random.choice(self.rp.FIGHT_CLUB_VICTORY_IMAGES))
				embed.set_author(
		            name="–ë–æ–π—Ü–æ–≤—Å–∫–∏–π –∫–ª—É–±", 
		            icon_url=inter.author.display_avatar.url
		        )
				message = await inter.edit_original_message(embed=embed, view=view)
				view.message = message
			else:
				embed = disnake.Embed(
					description=f"–¢—ã —Å–¥–µ–ª–∞–ª **{body_part}**, –Ω–æ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ –∑–∞—â–∏—Ç–∏–ª—Å—è –∏ —Å–¥–µ–ª–∞–ª —É–¥–∞—Ä. –¢—ã –æ—Å—Ç–∞–ª—Å—è –±–µ–∑ 5 –∑—É–±–æ–≤ –∏ **10 {self.CURRENCY_NAME}**.",
					color=Color.RED,
				)
				embed.set_image(url=random.choice(self.rp.FIGHT_CLUB_DEFEAT_IMAGES))
				embed.set_author(
		            name="–ë–æ–π—Ü–æ–≤—Å–∫–∏–π –∫–ª—É–±", 
		            icon_url=inter.author.display_avatar.url
		        )
				message = await inter.edit_original_message(embed=embed, view=view)
				view.message = message

	async def coin_button_callback(self, inter, view):
		await inter.response.defer(ephemeral=False)
		data = await self.db.get_data(inter.author)
		if (
			int(inter.message.embeds[0].fields[0].value) > data["balance"]
		):
			return await self.checks.check_unknown(
				inter, 
				text=f" —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ **{self.CURRENCY_NAME}** –¥–ª—è –∏–≥—Ä—ã –≤ –º–æ–Ω–µ—Ç–∫—É!",
            )
		else:
			await self.db.update_member(
				"UPDATE users SET balance = balance - ? WHERE member_id = ? AND guild_id = ?", 
				[
					int(inter.message.embeds[0].fields[0].value), 
					inter.author.id, 
					inter.guild.id
				],
			)
			if bool(
				random.getrandbits(1)
			):
				await self.db.update_member(
					"UPDATE users SET balance = balance + ? WHERE member_id = ? AND guild_id = ?", 
					[
						int(inter.message.embeds[0].fields[0].value), 
						inter.author.id, 
						inter.guild.id
					],
				)
				embed = disnake.Embed(
					title="–£—Å–ø–µ—Ö!",
					description=f"**–¢—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–∏–≥—Ä–∞–ª {str(round(int(inter.message.embeds[0].fields[0].value) * self.MULTIPLIER, 1))} {self.CURRENCY_NAME}!**",
					color=Color.GREEN,
				)
				embed.set_thumbnail(url="https://cdn-icons-png.flaticon.com/512/272/272525.png")
				embed.set_author(
		            name="–ú–æ–Ω–µ—Ç–∫–∞", 
		            icon_url=inter.author.display_avatar.url
		        )
				message = await inter.edit_original_message(embed=embed, view=view)
				view.message = message
			else:
				embed = disnake.Embed(
					title="–ü—Ä–æ–º–∞—Ö!",
					description=f"–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª **{inter.message.embeds[0].fields[0].value} {self.CURRENCY_NAME}!**",
					color=Color.RED,
				)
				embed.set_thumbnail(url="https://cdn-icons-png.flaticon.com/512/272/272525.png")
				embed.set_author(
		            name="–ú–æ–Ω–µ—Ç–∫–∞", 
		            icon_url=inter.author.display_avatar.url
		        )
				message = await inter.edit_original_message(embed=embed, view=view)
				view.message = message

	async def open_case_callback(self, inter, view):
		await inter.response.defer(ephemeral=False)
		data = await self.db.get_data(inter.author)
		if (
			10 > data["balance"]
		):
			return await self.checks.check_unknown(
				inter, 
				text=f" —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ **{self.CURRENCY_NAME}** –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞!",
            )
		else:
			rnd_int = random.randint(0, 50)
			await self.db.update_member(
				"UPDATE users SET balance = balance + ? WHERE member_id = ? AND guild_id = ?", 
				[
					rnd_int, 
					inter.author.id, 
					inter.guild.id
				],
			)
			embed = disnake.Embed(
				title="–ö–µ–π—Å —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç!", 
				description=f"**–í–∞—à –≤—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {rnd_int} {self.CURRENCY_NAME}**",
				color=Color.GREEN,
			)
			embed.set_thumbnail(url="https://cdn-icons-png.flaticon.com/512/10348/10348893.png")
			embed.set_author(
	            name="–ö–µ–π—Å —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç!", 
	            icon_url=inter.author.display_avatar.url
	        )
			message = await inter.edit_original_message(embed=embed, view=view)
			view.message = message