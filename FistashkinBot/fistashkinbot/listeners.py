import disnake
import datetime
import random

from disnake.ext import commands
from utils import database, constant, enums, main, automod, links


class Listeners(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.db = database.DataBase()
        self.otheremojis = constant.OtherEmojis()
        self.color = enums.Color()
        self.main = main.MainSettings()
        self.economy = main.EconomySystem(self.bot)
        self.automod = automod.Automod()

    @commands.Cog.listener()
    async def on_ready(self):
        await self.db.create_table()

        for guild in self.bot.guilds:
            for member in guild.members:
                await self.db.insert_new_member(member)
        print(f"{len(guild.members)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!")

    @commands.Cog.listener()
    async def on_member_join(self, member):
        await self.db.insert_new_member(member)
        print(f"–£—á–∞—Å—Ç–Ω–∏–∫ {member} ({member.id}) –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!")

    @commands.Cog.listener()
    async def on_guild_join(self, guild):
        developer = await self.bot.fetch_user(self.main.DEVELOPER_ID)
        inviter = await guild.audit_logs(
            action=disnake.AuditLogAction.bot_add, limit=None
        ).flatten()
        inviter_user = inviter[0].user

        embed = disnake.Embed(
            description=f"–ü—Ä–∏–≤–µ—Ç, **{inviter_user}**! üëã\n\n"
            f"–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –º–µ–Ω—è –Ω–∞ **{guild.name}**! ‚ù§\n"
            f"–Ø –Ω–µ–±–æ–ª—å—à–æ–π –±–æ—Ç —Å –ø—Ä–∏–∫–æ–ª—å–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ –¥–ª—è –≤–∞—à–µ–≥–æ —É—é—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞!\n"
            f"–Ø —Ä–∞–±–æ—Ç–∞—é –Ω–∞ —Å–ª–µ—à –∫–æ–º–∞–Ω–¥–∞—Ö, —á—Ç–æ —É–ø—Ä–æ—â–∞–µ—Ç –º–æ—ë –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ.\n"
            f"–í–æ—Ç –∫—Ä–∞—Ç–∫–∏–π –æ–±–∑–æ—Ä —Ç–æ–≥–æ, —á—Ç–æ —è —É–º–µ—é –¥–µ–ª–∞—Ç—å:\n\n"
            f"**üéÄ –û—Å–Ω–æ–≤–Ω–æ–µ**\n–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –ø—Ä–æ —Å–∞–º —Å–µ—Ä–≤–µ—Ä, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–∞–º—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ!\n\n"
            f"**‚ú® –≠–∫–æ–Ω–æ–º–∏–∫–∞**\n–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥–∏—Ç—å —Å–≤–æ–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∑–∞ –∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–æ–≤–æ–π –≤–∞–ª—é—Ç–æ–π –±–æ—Ç–∞, –ø–æ–≤—ã—à–∞—Ç—å—Å—è –≤ —Ä–∞–Ω–≥–µ –≤ —Ç–æ–ø—ã —Å–µ—Ä–≤–µ—Ä–∞!\n\n"
            f"**üõ°Ô∏è –ú–æ–¥–µ—Ä–∞—Ü–∏—è**\n–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç AutoMod, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–æ–∑–¥–∞—ë—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –∞–≤—Ç–æ–º–æ–¥–µ—Ä–∞—Ü–∏–∏ (—Ñ–∏–ª—å—Ç—Ä –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤, –æ–±—ã—á–Ω–æ–≥–æ —Å–ø–∞–º–∞ –∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –∏ —Ç.–¥.), —á—Ç–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ø—Ä–æ—â–∞–µ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏—é —Å–µ—Ä–≤–µ—Ä–∞. –ö—Ä–æ–º–µ —ç—Ç–æ–≥–æ –∏–º–µ—é—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–∞–Ω, –∫–∏–∫, –º—å—é—Ç –∏ –ø—Ä–æ—á–µ–µ.\n\n"
            f"**üé≠ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ**\n–ï—Å—Ç—å —Ç–∞–∫–∂–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–µ–±–æ–ª—å—à–∏—Ö –∑–∞–±–∞–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π, —Ç–∞–∫–∏—Ö –∫–∞–∫ 8ball, –∫–∞–∑–∏–Ω–æ, –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.\n\n"
            f"**ü§ñ –°–ª–µ—à –∫–æ–º–∞–Ω–¥—ã**\n–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –∫–æ—Å–æ–π —á–µ—Ä—Ç—ã, —á—Ç–æ–±—ã –æ–±–ª–µ–≥—á–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞.\n\n"
            f"**‚ùì –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å?**\n–ù–∞—à —Å–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Discord: https://discord.gg/H9XCZSReMj",
            color=self.color.MAIN,
        )
        embed.set_author(
            name=self.bot.user.name,
            icon_url=self.bot.user.display_avatar.url,
            url="https://discord.gg/H9XCZSReMj",
        )
        embed.set_footer(text=self.main.FOOTER_TEXT, icon_url=self.main.FOOTER_AVATAR)

        await inviter_user.send(
            embed=embed,
            components=[
                disnake.ui.Button(
                    label=f"–° –ª—é–±–æ–≤—å—é —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ {developer.display_name}",
                    emoji="‚ù§Ô∏è",
                    style=disnake.ButtonStyle.gray,
                    disabled=True,
                )
            ],
        )

        for member in guild.members:
            await self.db.insert_new_member(member)
        print(f"–°–µ—Ä–≤–µ—Ä {guild.name} –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö! –î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(guild.members)}")

        await self.automod.automod(guild)

    @commands.Cog.listener()
    async def on_message(self, message):
        if message.author == self.bot.user:
            return
        if message.author.bot or not message.guild:
            return

        if len(message.content) >= 6:
            """if isinstance(message.channel, disnake.DMChannel) or isinstance(
                message.channel, disnake.Thread
            ):
                return
            else:"""
            data = await self.db.get_data(message.author)
            if data["xp"] >= 500 + 100 * data["level"]:
                await self.db.update_member(
                    "UPDATE users SET level = level + ? WHERE member_id = ? AND guild_id = ?",
                    [1, message.author.id, message.guild.id],
                )
                await self.db.update_member(
                    "UPDATE users SET xp = ? WHERE member_id = ? AND guild_id = ?",
                    [0, message.author.id, message.guild.id],
                )

                LEVEL_UP_TEXT = [
                    f"{random.choice(self.otheremojis.RANKED_UP)} | {message.author.mention}, —Ç—ã –ø–æ–≤—ã—Å–∏–ª —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –Ω–∞ **{data['level'] + 1} LVL!**",
                    f"{random.choice(self.otheremojis.RANKED_UP)} | {message.author.mention}, –Ω–∏—á–µ–≥–æ —Å–µ–±–µ! –¢—ã –∞–ø–Ω—É–ª —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –¥–æ **{data['level'] + 1} LVL!**",
                    f"{random.choice(self.otheremojis.RANKED_UP)} | –ü–æ–ª–µ–≥—á–µ {message.author.mention}, —Ç—ã –ø—Ä–æ–¥–≤–∏–Ω—É–ª—Å—è –¥–æ **{data['level'] + 1}** —É—Ä–æ–≤–Ω—è! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é!",
                    f"{random.choice(self.otheremojis.RANKED_UP)} | –í–æ—É-–≤–æ—É-–≤–æ—É {message.author.mention}, —á—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å? –¢—ã –ø–æ–≤—ã—Å–∏–ª —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –¥–æ **{data['level'] + 1} LVL!**",
                    f"{random.choice(self.otheremojis.RANKED_UP)} | {message.author.mention} –¥–∞ —Ç—ã –º–æ–Ω—Å—Ç—Ä! –¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –±—ã–ª –ø–æ–≤—ã—à–µ–Ω –¥–æ **{data['level'] + 1} LVL!**",
                    f"{random.choice(self.otheremojis.RANKED_UP)} | {message.author.mention} –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –¥–æ—Å—Ç–∏–≥ **{data['level'] + 1} LVL!**",
                    f"{random.choice(self.otheremojis.RANKED_UP)} | –£—Ä–∞! {message.author.mention} —Ç–æ–ª—å–∫–æ —á—Ç–æ –¥–æ—Å—Ç–∏–≥ **{data['level'] + 1} LVL!** –ú–æ–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è ^‚Ä¢^",
                ]
                if member.top_role is not None:
                    top_role = member.top_role.mention
                    color = member.top_role.color
                else:
                    color = self.color.DARK_GRAY

                embed = disnake.Embed(description=random.choice(LEVEL_UP_TEXT), color=color)
                embed.set_author(
                    name="–ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å!",
                    icon_url=message.author.display_avatar.url,
                )
                await message.channel.send(embed=embed, delete_after=15.0)

            else:
                if message.guild.premium_subscriber_role in message.author.roles:
                    await self.db.update_member(
                        "UPDATE users SET xp = xp + ? WHERE member_id = ? AND guild_id = ?",
                        [
                            25 * self.economy.MULTIPLIER,
                            message.author.id,
                            message.guild.id,
                        ],
                    )
                    await self.db.update_member(
                        "UPDATE users SET balance = balance + ? WHERE member_id = ? AND guild_id = ?",
                        [
                            0.50 * self.economy.MULTIPLIER,
                            message.author.id,
                            message.guild.id,
                        ],
                    )
                if message.author.id == self.main.DEVELOPER_ID:
                    await self.db.update_member(
                        "UPDATE users SET xp = xp + ? WHERE member_id = ? AND guild_id = ?",
                        [
                            500,
                            message.author.id,
                            message.guild.id,
                        ],
                    )
                    await self.db.update_member(
                        "UPDATE users SET balance = balance + ? WHERE member_id = ? AND guild_id = ?",
                        [
                            500,
                            message.author.id,
                            message.guild.id,
                        ],
                    )

                else:
                    await self.db.update_member(
                        "UPDATE users SET xp = xp + ? WHERE member_id = ? AND guild_id = ?",
                        [25, message.author.id, message.guild.id],
                    )
                    await self.db.update_member(
                        "UPDATE users SET balance = balance + ? WHERE member_id = ? AND guild_id = ?",
                        [0.50, message.author.id, message.guild.id],
                    )

    @commands.Cog.listener()
    async def on_slash_command_completion(self, inter: disnake.ApplicationCommandInteraction):
        pass

    @commands.Cog.listener()
    async def on_slash_command_error(self, inter, error):
        #error = getattr(error, "original", error)
        print(error)
        await inter.response.defer(ephemeral = True)

        if isinstance(error, commands.MissingPermissions):
            description = (
                f"{inter.author.mention}, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!"
            )

        elif isinstance(error, commands.NotOwner):
            description = (
                f"{inter.author.mention}, —Ç—ã –Ω–µ —è–≤–ª—è–µ—à—å—Å—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –±–æ—Ç–∞, –ø–æ—ç—Ç–æ–º—É –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞!"
            )

        elif isinstance(error, commands.BotMissingPermissions):
            description = (
                f"{inter.author.mention}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ —É –±–æ—Ç–∞.\n–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞: {error.missing_permissions}"
            )

        elif isinstance(error, commands.CommandOnCooldown):
            cooldown_time = datetime.datetime.now() + datetime.timedelta(seconds=int(round(error.retry_after)))
            dynamic_time = disnake.utils.format_dt(cooldown_time, style="R")
            description = (
                f"**–í–æ—É—É—É, –ø–æ–ª–µ–≥—á–µ {inter.author.mention}!** –ü–æ—Ö–æ–∂–µ, —á—Ç–æ —Ç—ã –Ω–∞—Ä—É—à–∞–µ—à—å **–∫—É–ª–¥–∞—É–Ω –∫–æ–º–∞–Ω–¥!**\n–ü–æ–≤—Ç–æ—Ä–∏ {dynamic_time}!"
            )

        elif isinstance(error, commands.errors.MemberNotFound):
            description = (
                f"{inter.author.mention}, —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω."
            )

        elif isinstance(error, Exception):
            description = (
                f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫—É –Ω–∞ [—Å–µ—Ä–≤–µ—Ä —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏](https://discord.com/channels/1037792926383747143/1066328008664813610)\n\n"
                f"**–ö–æ–¥ –æ—à–∏–±–∫–∏:**\n```{error}```"
            )
            
        embed = disnake.Embed(
            title=f"{self.otheremojis.WARNING} –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!", 
            description=description, 
            color=self.color.MAIN
        )
        await inter.edit_original_message(embed=embed, view=links.Support_Link())


def setup(bot):
    bot.add_cog(Listeners(bot))
